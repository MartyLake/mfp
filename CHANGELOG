mfp v0.06, 2017-Jan-18

  * #88: Improve load times 
  
  * #98: Use Separating Axis Test for rubberband boxing

  * #209: Attribute errors to the processor where they happened

  * #224: Fixes to send/receive vias in multi-scoped patches

  * #270: Add @style method to change display properties

  * #271: Make left-side and console/log displays hideable

  * #277: Arrow keys change values in sliders, dials

  * #279: Don't time out when loading large patches

  * #284, #285: Fix leaks to allow long runtimes

  * Many other bugfixes and improvements 

mfp v0.05.1, 2014-Oct-29 

  * #219: Solve wscript errors with Python 2.x 

  * #221: Fix LD_LIBRARY_PATH pollution 

  * #220: (not closed) Add notes to README.md and README.build about potential 
    errors on 'waf install' 

mfp v0.05, 2014-Oct-28 

  * #134: Add -v/--verbose to log console messages to stdout 

  * #137: Support for MFP being loaded as an LV2 plugin 

  * #139: Save MFP patches as LV2 plugins 

  * #147: Find another OSC port if the requested one is busy 

  * #159: Attempt to restart DSP backend and reload patch if backend crashes 

  * #163: New build system using waf 

  * #167: Ask for confirmation on quit if patches have been edited 

  * #171: "Hygienic" layer duplication for dynamic patch building 

  * #193: Demo patch: mixer with panning and configurable aux sends 

  * #211: Tutorial patch 

  * Many other bugfixes and improvements 

mfp v0.04, 2013-May-16

  * #31: Support exported UIs from user patches ("graph-on-parent") 

  * #64: Improved implementation of "Operate" mode, making editing/control
    fully modal 

  * #66: Expanded information in tooltips and "badges" 

  * #87: New Dial object (round slider)

  * #85: Support audio input/output in user patches 

  * #111: Bind "app" to allow a message via to send messages to it 

  * Many other bugfixes and improvements.

mfp v0.03.1, 2013-Apr-17

  * #74: Changes to [r] semantics mean that saved patches containing [r] 
    objects will not load.  Demo patches edited to make them loadable. 

  * #77: Save/restore of [s]/[r] objects was broken, preventing successful load 
    of patches containing them 

  * #76: Added [delblk~] processor (delay of at least one JACK buffer) to allow 
    scheduling of patches with feedback loops 


mfp v0.03, 2013-Apr-16 

  * #49: Remove last lock calls from JACK process() path 

  * #51: Multiple [r]/[r~] receivers can share a name (multicast/bus)

  * #52: Multiple selection in UI (rubberband box/Shift+click)

  * #55: Cut/copy/paste using JSON to X Clipboard 

  * #57: Support for NSM session management 

  * #58: Implement MIDI control learning for all Processors 

  * #65: Save/restore MIDI and OSC controller routings

  * Many other bugfixes and improvements 


mfp v0.02, 2013-Mar-13 

  * #30: Fix RMS calculation in [ampl~]

  * #37: Add [s~], [r~] and different via graphics 

  * #41: Clean up SSE vs non-SSE, add tests for non-SSE build

  * #42: Make parameter setting non-locking; add mfp_alloc thread 
         for non-blocking memory allocation 

  * #43: Refactor color name usage to avoid API breakage with 
         different versions of Clutter python bindings 

  * #44: Fix broken tests 

  * #46: Add ability to load .so extension libraries with new DSP types 

  * #47: Handle JACK block size changes at runtime 

  * #48: Add [latency] object to report JACK input and output latency 
         to patches 


mfp v0.01, 2013-Feb-22 

  * Initial release 


