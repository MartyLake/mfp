MFP -- music for programmers 

MFP is an environment for visually composing computer programs, with
an emphasis on music and real-time audio synthesis and analysis.  It's
very much inspired by Miller Puckette's Pure Data (pd) and MAX/MSP,
with a bit of LabView and TouchOSC for good measure.  

MFP is in its early development phases.  Large pieces of core functionality
are not implemented yet, including: complete support for extensions,
multiple selection, cut/copy/paste, undo, hosting of plugins, JACK MIDI,
i18n, audio file reading, etc etc etc.

What IS there is the basic program window and patch editor, enough 
message and DSP processors to build some demo patches, a model for how
a mostly-keyboard-controlled GUI app will work, and the infrastructure
of the 3 separate processes (main, GUI, and DSP) that work together to
make MFP happen. 

Prerequisites: a bunch of dependencies need to be installed for this
to work.  I use debian sid (unstable) but I don't depend on bleeding
edge anything beyond that.  I think that 'apt-get install' on the below 
will pull in any necessary dependencies. 

    Basics: 
        python (python2.7 on sid, 2.6 should work too) 
        gcc (to build DSP extensions)
        python-dev (for Python.h)
        python-setuptools 
        python-nose 
        python-virtualenv
        python-simplejson 
        pkg-config  
        
    Python packages from PYPI (not in Debian):
        posix_ipc 

    Clutter-based GUI: 
        libgtk-3-dev
        libclutter-1.0-dev 
        python-gi (GObject Introspection for Python)
        gir1.2-clutter-1.0 (clutter bindings for GI)
        gir1.2-gtkclutter-1.0 (clutter-GTK bindings for GI)
        gir1.2-cogl-1.0 (COGL bindings for GI)
        gir1.2-coglpango-1.0 (COGL Pango bindings for GI)

    JACK/ALSA/etc: 
        libjack0
        libjack0-dev
        libasound2
        libasound2-dev
        liblo7 (OSC library, python bindings in lib/)
        liblo-dev 

Building: I suggest using 'virtualenv' to build in a sandbox.   The
packages in "lib" are required for MIDI and OSC functionality and I
couldn't find them for easy_install.

From the top level (where this file is located): 

    $ virtualenv --python=python2.7 --system-site-packages virtual
    $ . virtual/bin/activate 
    
If you don't have posix_ipc on your system: 

    $ pip install posix_ipc 

Install libs and main program:

    $ for dir in testext lib/alsaseq-0.4.1 lib/pyliblo-0.9.1 ;
      do (cd $dir ; python ./setup.py install) 
      done 
    $ python ./setup.py install 

Then, run the unit tests:

    $ python /usr/bin/nosetests -v mfp 
    $ python /usr/bin/nosetests -v --with-testext --exe build 

The second line uses a custom nose plugin (testext) to run unit tests
in a compiled C extension called "mfpdsp" used by MFP.  I'm not aware
of another tool to automatically discover and run plain C tests in
plain C libraries.  

If all that works: 
    $ mfp 

Demo patches: There are a few demo patches in doc/ which are really all the
documentation there is right now.  Since there's no support for load paths
yet, you need to copy these into the root level of the source tree to run
them. 

Run the demo patch by putting the file name on the command line, i.e. 

    $ mfp hello_world.mfp

hello_world.mfp:  The classic 

biquad_designer.mfp: What I'm actively working on to exercise new stuff.
Not complete and broken!  but if you want to try it, you can do this: 
 * unclick, then reclick "Highpass" on the front layer 
 * click-to-select, then Return twice, on each parameter input
 * Go to the "Graphs" page and click all the messages (no loadbang yet)
 * Go back to the front page, click the "Calculate" button.  Then the
   pole-zero graph will show up on the "Graphs" page. 
This one requires "quadratic.mfp" to be in the root src dir also

Saving files: There's no UI for saving yet.  You can do it from the
console.  

    >>> app.patches['default'].save_file("filename.mfp")

Reporting problems: For now, I will be using the GitHub hosted issue
tracker and wiki. 

Enjoy! 

Bill Gribble <grib@billgribble.com>
